前端：Vue 3 + TypeScript + Vite
后端：Node.js + Express + TypeScript
数据库：MongoDB
 vergo/
├── frontend/                # 前端项目
│   ├── src/
│   │   ├── assets/         # 静态资源
│   │   ├── components/     # 组件
│   │   ├── views/          # 页面
│   │   ├── store/          # 状态管理
│   │   ├── router/         # 路由
│   │   └── api/            # API请求
│   
├── backend/                 # 后端项目
│   ├── src/
│   │   ├── controllers/    # 控制器
│   │   ├── models/         # 数据模型
│   │   ├── routes/         # 路由
│   │   ├── services/       # 服务
│   │   └── utils/          # 工具函数
│   
├── docs/                    # 文档
└── docker/                  # Docker配置
<!-- Header.vue -->
<template>
  <header class="header">
    <div class="logo">
      <img src="@/assets/logo.png" alt="Vergo">
    </div>
    
    <div class="search">
      <input type="text" placeholder="搜索资源...">
    </div>
    
    <nav class="main-nav">
      <ul>
        <li><router-link to="/">首页</router-link></li>
        <li><router-link to="/resources">资源</router-link></li>
        <li><router-link to="/upload">上传</router-link></li>
      </ul>
    </nav>
    
    <div class="mobile-menu">
      <i class="fas fa-bars"></i>
    </div>
  </header>
</template>
// resourceController.ts
import { Request, Response } from 'express';
import Resource from '../models/resource';

export const getResources = async (req: Request, res: Response) => {
  try {
    const resources = await Resource.find().sort({ createDate: -1 });
    res.json(resources);
  } catch (error) {
    res.status(500).json({ message: error.message });
  }
};
// resource.model.ts
import mongoose from 'mongoose';

const resourceSchema = new mongoose.Schema({
  title: { type: String, required: true },
  category: { type: String, required: true },
  downloads: { type: Number, default: 0 },
  updateDate: { type: Date, default: Date.now },
  description: String,
  fileUrl: String,
  rating: { type: Number, default: 0 },
  comments: [{
    user: { type: mongoose.Schema.Types.ObjectId, ref: 'User' },
    content: String,
    date: { type: Date, default: Date.now }
  }]
});

export default mongoose.model('Resource', resourceSchema);
# 安装依赖
npm install

# 开发环境运行
npm run dev

# 生产环境构建
npm run build

# 启动服务
npm start
// .env
NODE_ENV=development
PORT=3000
MONGODB_URI=mongodb://localhost:27017/vergo
JWT_SECRET=your-secret-key
SMS_API_KEY=your-sms-api-key
